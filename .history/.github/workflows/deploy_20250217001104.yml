name: Deploy Flask to EKS with Security Scanning

on:
  push:
    branches:
      - main # Runs when you push to main

jobs:
  build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t cloudsecdee/flask-api:latest --push .

  sonar-scan:
    name: SonarQube Static Analysis
    runs-on: ubuntu-latest
    needs: build-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SonarScanner
        run: |
          sudo apt-get update && sudo apt-get install -y unzip curl
          curl -o sonarscanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonarscanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "export PATH=$PATH:/opt/sonar-scanner/bin" >> ~/.bashrc
          echo "export SONAR_SCANNER_OPTS=\"-server\"" >> ~/.bashrc
          source ~/.bashrc

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          /opt/sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=cloudsecdee-flask-eks \
            -Dsonar.organization=your-org \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.branch.name=main \
            -Dsonar.login=$SONAR_TOKEN

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: build-push

    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sfL https://aquasecurity.github.io/trivy/scripts/install.sh | sh
          sudo mv ./bin/trivy /usr/local/bin/trivy

      - name: Scan Docker Image with Trivy (Info)
        run: |
          trivy image cloudsecdee/flask-api:latest --exit-code 0 --severity HIGH,CRITICAL

      - name: Scan Docker Image with Trivy (Fail on Critical)
        run: |
          trivy image cloudsecdee/flask-api:latest --exit-code 1 --severity CRITICAL

  configure-aws:
    name: Configure AWS & Update Kubeconfig
    runs-on: ubuntu-latest
    needs: [build-push, sonar-scan, trivy-scan]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --name flask-eks-cluster --region us-east-1

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: configure-aws

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8-manifests/flask-deployment.yaml
          kubectl apply -f k8-manifests/flask-service.yaml
          kubectl apply -f k8-manifests/flask-ingress.yaml
