name: Deploy Flask to EKS

on:
  push:
    branches:
      - main

jobs:
  sonar-scan:
    name: Run SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2.0.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
        with:
          args: >
            -Dsonar.projectKey=19-Dee_flask-eks-deployment
            -Dsonar.organization=19-Dee
            -Dsonar.sources=.
            -Dsonar.language=python
            -Dsonar.exclusions=**/tests/**,**/migrations/**

  build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: sonar-scan # Ensure SonarQube runs first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t cloudsecdee/flask-api:latest --push .

  container-security:
    name: Scan Docker Image (Trivy)
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Run Container Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "cloudsecdee/flask-api:latest"
          format: "table"
          exit-code: "1"

  configure-aws:
    name: Configure AWS & Update Kubeconfig
    runs-on: ubuntu-latest
    needs: container-security
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --name flask-eks-cluster --region us-east-1

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: configure-aws
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8-manifests/flask-deployment.yaml
          kubectl apply -f k8-manifests/flask-service.yaml
          kubectl apply -f k8-manifests/flask-ingress.yaml
